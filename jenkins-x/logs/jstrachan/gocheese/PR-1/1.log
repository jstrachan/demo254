Step: build-step-credential-initializer:

{"level":"warn","ts":1548779523.3213508,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1548779523.321789,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-git-source-0:

{"level":"warn","ts":1548779524.5100691,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1548779527.118633,"logger":"fallback-logger","caller":"git-init/main.go:92","msg":"Successfully cloned \"https://github.com/jstrachan/gocheese.git\" @ \"96a16ee65f62203c171914a977be1d29dc9e1fc8\" in path \"/workspace\""}
Step: build-step-jenkins:

Picked up _JAVA_OPTIONS: -Xmx400m
Started
Running in Durability level: PERFORMANCE_OPTIMIZED
  16.811 [id=31]	WARNING	i.f.k.c.i.VersionUsageUtils#alert: The client is using resource type 'customresourcedefinitions' with unstable version 'v1beta1'
[Pipeline] node
Running on Jenkins in /tmp/jenkinsTests.tmp/jenkins8207360929784551482test/workspace/job
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
[Pipeline] }
[Pipeline] // stage
[Pipeline] withCredentials
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (CI Build and push snapshot)
[Pipeline] withEnv
[Pipeline] {
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/jstrachan/gocheese
[Pipeline] {
[Pipeline] checkout
[Pipeline] sh
+ make linux
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO15VENDOREXPERIMENT=1 go build -ldflags '' -o bin/gocheese main.go
[Pipeline] sh
+ export VERSION=0.0.0-SNAPSHOT-PR-1-1
+ skaffold build -f skaffold.yaml
time="2019-01-29T16:32:45Z" level=warning msg="config version (skaffold/v1beta2) out of date: upgrading to latest (skaffold/v1beta3)"
Starting build...
Building [changeme]...
Sending build context to Docker daemon  525.8kBSending build context to Docker daemon  6.502MB
Step 1/4 : FROM scratch
 ---> 
Step 2/4 : EXPOSE 8080
 ---> Using cache
 ---> 3e08b6fba192
Step 3/4 : ENTRYPOINT /gocheese
 ---> Using cache
 ---> bd55d0ac510d
Step 4/4 : COPY ./bin/ /
 ---> fb00d32f06b5
Successfully built fb00d32f06b5
The push refers to a repository [10.59.251.143:5000/jstrachan/gocheese]
a13c1cdb06f8: Preparing
a13c1cdb06f8: Pushed
0.0.0-SNAPSHOT-PR-1-1: digest: sha256:3b6725cf1f47ac4a20a25a4cf6c05332857362c95c530812603d766e138dafeb size: 528
Build complete in 1.305713908s
Starting test...
Test complete in 5.288Âµs
changeme -> 10.59.251.143:5000/jstrachan/gocheese:0.0.0-SNAPSHOT-PR-1-1
[Pipeline] sh
+ jx step post build --image 10.59.251.143:5000/jstrachan/gocheese:0.0.0-SNAPSHOT-PR-1-1
[Pipeline] }
[Pipeline] // dir
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/jstrachan/gocheese/charts/preview
[Pipeline] {
[Pipeline] sh
+ make preview
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-1-1/" Chart.yaml
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-1-1/" ../*/Chart.yaml
sed -i -e "s|repository:.*|repository: 10.59.251.143:5000\/jstrachan\/gocheese|" values.yaml
sed -i -e "s/tag:.*/tag: 0.0.0-SNAPSHOT-PR-1-1/" values.yaml
echo "  version: 0.0.0-SNAPSHOT-PR-1-1" >> requirements.yaml
jx step helm build
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: jenkins-x http://chartmuseum.jenkins-x.io
Successfully added Helm repository jenkins-x.
Adding missing Helm repo: releases http://jenkins-x-chartmuseum:8080
Successfully added Helm repository releases.
[Pipeline] sh
+ jx preview --app gocheese --dir ../..
Creating a preview
Commit author email is empty for: 96a16ee65f62203c171914a977be1d29dc9e1fc8
Looking for commits in: /home/jenkins/go/src/github.com/jstrachan/gocheese/
Found commit author match for: jstrachan with email address: james.strachan@gmail.com
Created environment jstrachan-gocheese-pr-1
Namespace jx-jstrachan-gocheese-pr-1 created 
 expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  config:
    domain: 35.240.38.127.nip.io
    exposer: Ingress
    http: "true"
preview:
  image:
    repository: 10.59.251.143:5000/jstrachan/gocheese
    tag: 0.0.0-SNAPSHOT-PR-1-1
Applying generated chart . YAML via kubectl in dir: /tmp/helm-template-workdir-527513640/preview/output
role.rbac.authorization.k8s.io/cleanup created
rolebinding.rbac.authorization.k8s.io/cleanup created
serviceaccount/cleanup created
configmap/exposecontroller created
role.rbac.authorization.k8s.io/expose created
rolebinding.rbac.authorization.k8s.io/expose created
serviceaccount/expose created
deployment.extensions/preview-preview created
service/gocheese created
Applying Helm hook post-upgrade YAML via kubectl in file: /tmp/helm-template-workdir-527513640/preview/helmHooks/preview/charts/expose/templates/job.yaml
job.batch/expose created
Waiting for helm post-upgrade hook Job expose to complete before removing it
Deleting helm hook sources from file: /tmp/helm-template-workdir-527513640/preview/helmHooks/preview/charts/expose/templates/job.yaml
job.batch "expose" deleted
Removing Kubernetes resources from older releases using selector: jenkins.io/chart-release=preview,jenkins.io/version!=0.0.0-SNAPSHOT-PR-1-1
Failed to update PipelineActivities jstrachan-gocheese-pr-1-1: the namespace of the object (jx-jstrachan-gocheese-pr-1) does not match the namespace on the request (jx)
Preview application is now available at: http://gocheese.jx-jstrachan-gocheese-pr-1.35.240.38.127.nip.io

[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Release)
Stage "Build Release" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Promote to Environments)
Stage "Promote to Environments" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
